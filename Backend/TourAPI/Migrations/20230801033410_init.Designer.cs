// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TourAPI.Models;

#nullable disable

namespace TourAPI.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20230801033410_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TourAPI.Models.Destinations", b =>
                {
                    b.Property<int>("DestinationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DestinationId"), 1L, 1);

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DestinationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DestinationId");

                    b.ToTable("Destinations");
                });

            modelBuilder.Entity("TourAPI.Models.Exclutions", b =>
                {
                    b.Property<int>("ExclutionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExclutionId"), 1L, 1);

                    b.HasKey("ExclutionId");

                    b.ToTable("Exclutions");
                });

            modelBuilder.Entity("TourAPI.Models.Inclutions", b =>
                {
                    b.Property<int>("InclutionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InclutionId"), 1L, 1);

                    b.HasKey("InclutionId");

                    b.ToTable("Inclutions");
                });

            modelBuilder.Entity("TourAPI.Models.Tour", b =>
                {
                    b.Property<int>("TourId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TourId"), 1L, 1);

                    b.Property<int>("MaxCapacity")
                        .HasColumnType("int");

                    b.Property<int>("MinCapacity")
                        .HasColumnType("int");

                    b.Property<int>("NoOfDays")
                        .HasColumnType("int");

                    b.Property<int>("NoOfNights")
                        .HasColumnType("int");

                    b.Property<string>("TourDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TourImages")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TourName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("TourPrice")
                        .HasColumnType("real");

                    b.Property<string>("TourType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TourId");

                    b.ToTable("Tour");
                });

            modelBuilder.Entity("TourAPI.Models.TourDates", b =>
                {
                    b.Property<int>("TourDateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TourDateId"), 1L, 1);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TourId")
                        .HasColumnType("int");

                    b.HasKey("TourDateId");

                    b.HasIndex("TourId");

                    b.ToTable("TourDates");
                });

            modelBuilder.Entity("TourAPI.Models.TourDestinations", b =>
                {
                    b.Property<int>("TourDestinationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TourDestinationId"), 1L, 1);

                    b.Property<string>("DestinationActivity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DestinationId")
                        .HasColumnType("int");

                    b.Property<string>("DestinationImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TourId")
                        .HasColumnType("int");

                    b.HasKey("TourDestinationId");

                    b.HasIndex("DestinationId");

                    b.HasIndex("TourId");

                    b.ToTable("TourDestinations");
                });

            modelBuilder.Entity("TourAPI.Models.TourExclutions", b =>
                {
                    b.Property<int>("TourExclutionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TourExclutionId"), 1L, 1);

                    b.Property<int>("ExclutionId")
                        .HasColumnType("int");

                    b.Property<int>("TourId")
                        .HasColumnType("int");

                    b.HasKey("TourExclutionId");

                    b.HasIndex("ExclutionId");

                    b.HasIndex("TourId");

                    b.ToTable("TourExclutions");
                });

            modelBuilder.Entity("TourAPI.Models.TourInclutions", b =>
                {
                    b.Property<int>("TourInclutionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TourInclutionId"), 1L, 1);

                    b.Property<int>("InclutionId")
                        .HasColumnType("int");

                    b.Property<int>("TourId")
                        .HasColumnType("int");

                    b.HasKey("TourInclutionId");

                    b.HasIndex("InclutionId");

                    b.HasIndex("TourId");

                    b.ToTable("TourInclutions");
                });

            modelBuilder.Entity("TourAPI.Models.TourDates", b =>
                {
                    b.HasOne("TourAPI.Models.Tour", "Tour")
                        .WithMany("TourDates")
                        .HasForeignKey("TourId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("TourAPI.Models.TourDestinations", b =>
                {
                    b.HasOne("TourAPI.Models.Destinations", "Destinations")
                        .WithMany()
                        .HasForeignKey("DestinationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TourAPI.Models.Tour", "Tour")
                        .WithMany("TourDestinations")
                        .HasForeignKey("TourId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Destinations");

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("TourAPI.Models.TourExclutions", b =>
                {
                    b.HasOne("TourAPI.Models.Exclutions", "Exclutions")
                        .WithMany()
                        .HasForeignKey("ExclutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TourAPI.Models.Tour", "Tour")
                        .WithMany("TourExclutions")
                        .HasForeignKey("TourId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exclutions");

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("TourAPI.Models.TourInclutions", b =>
                {
                    b.HasOne("TourAPI.Models.Inclutions", "Inclutions")
                        .WithMany()
                        .HasForeignKey("InclutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TourAPI.Models.Tour", "Tour")
                        .WithMany("TourInclutions")
                        .HasForeignKey("TourId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inclutions");

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("TourAPI.Models.Tour", b =>
                {
                    b.Navigation("TourDates");

                    b.Navigation("TourDestinations");

                    b.Navigation("TourExclutions");

                    b.Navigation("TourInclutions");
                });
#pragma warning restore 612, 618
        }
    }
}
